<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wapwag.woss.modules.sys.dao.OfficeDao">

	<sql id="officeColumns">
		a.id,
		a.parent_id AS "parent.id",
		a.parent_ids,
		a.area_id AS "area.id",
		a.code,
		a.name,
		a.sort,
		a.type,
		a.grade,
		a.address,
		a.master,
		a.phone,
		a.fax,
		a.email,
		a.remarks,
		a.create_by AS "createBy.id",
		a.create_date,
		a.update_by AS
		"updateBy.id",
		a.update_date,
		a.del_flag,
		a.useable AS useable,
		a.new_type AS newType,
		<!-- a.primary_person AS "primaryPerson.id", a.deputy_person AS "deputyPerson.id", -->
		p.name AS "parent.name",
		ar.name AS "area.name",
		ar.parent_ids AS
		"area.parentIds"
		<!-- pp.name AS "primaryPerson.name", dp.name AS "deputyPerson.name" -->
	</sql>

	<sql id="officeJoins">
		LEFT JOIN sys_office p ON p.id = a.parent_id
		LEFT JOIN regional ar ON
		ar.id = a.area_id
		<!-- LEFT JOIN SYS_USER pp ON pp.id = a.primary_person LEFT JOIN SYS_USER 
			dp ON dp.id = a.deputy_person -->
	</sql>

	<select id="get" resultType="Office">
		SELECT
		<include refid="officeColumns" />
		FROM sys_office a
		<include refid="officeJoins" />
		WHERE a.id = #{id}
	</select>

	<select id="findList" resultType="Office">
		SELECT
		<include refid="officeColumns" />
		FROM sys_office a
		<include refid="officeJoins" />
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
		<!-- 数据范围过滤 -->
		${sqlMap.dsf}
		OR a.id = #{currentUser.office.id}
		ORDER BY a.code
	</select>

	<select id="findAllList" resultType="Office">
		SELECT
		<include refid="officeColumns" />
		FROM sys_office a
		<include refid="officeJoins" />
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
		ORDER BY a.code
	</select>

	<select id="findByParentIdsLike" resultType="Office">
		SELECT
		<include refid="officeColumns" />
		FROM sys_office a
		<include refid="officeJoins" />
		WHERE a.del_flag = #{DEL_FLAG_NORMAL} AND a.parent_ids LIKE
		#{parentIds}
		ORDER BY a.code
	</select>

	<insert id="insert">
		INSERT INTO sys_office(
		id,
		parent_id,
		parent_ids,
		area_id,
		code,
		name,
		sort,
		type,
		grade,
		address,
		master,
		phone,
		fax,
		email,
		create_by,
		create_date,
		update_by,
		update_date,
		remarks,
		del_flag,
		useable,
		new_type
		<!-- , primary_person, deputy_person -->
		) VALUES (
		#{id},
		#{parent.id},
		#{parentIds},
		#{area.id},
		#{code},
		#{name},
		#{sort},
		#{type},
		#{grade},
		#{address},
		#{master},
		#{phone},
		#{fax},
		#{email},
		#{createBy.id},
		#{createDate},
		#{updateBy.id},
		#{updateDate},
		#{remarks},
		#{delFlag},
		#{useable},
		#{newType}<!-- , #{primaryPerson.id}, #{deputyPerson.id} -->
		)
	</insert>

	<update id="update">
		UPDATE sys_office SET
		parent_id = #{parent.id},
		parent_ids = #{parentIds},
		area_id = #{area.id},
		code = #{code},
		name = #{name},
		type = #{type},
		grade = #{grade},
		address = #{address},
		master = #{master},
		phone = #{phone},
		fax = #{fax},
		email = #{email},
		update_by = #{updateBy.id},
		update_date = #{updateDate},
		remarks = #{remarks},
		useable=#{useable},
		new_type = #{newType}<!-- , primary_person=#{primaryPerson.id}, deputy_person=#{deputyPerson.id} -->
		WHERE id = #{id}
	</update>

	<update id="updateParentIds">
		UPDATE sys_office SET
		parent_id = #{parent.id},
		parent_ids = #{parentIds}
		WHERE id = #{id}
	</update>

	<update id="delete">
		UPDATE sys_office SET
		del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id} OR parent_ids LIKE
		<if test="dbName == 'mysql'">CONCAT('%,', #{id}, ',%')</if>
	</update>

	<!-- 水司节点 -->
	<select id="findWaterHouseByRole" resultType="com.wapwag.woss.modules.biz.entity.TreeInfo">
		SELECT
		o.parent_id pid,
		pi.water_house_orgNode id ,
		o.`name` name
		FROM
		project pi
		LEFT JOIN pump_house phi ON phi.id_project = pi.id
		LEFT JOIN device di ON di.ID_PUMP_HOUSE = phi.id
		LEFT JOIN services se ON se.ID_DEVICE = di.ID
		LEFT JOIN sys_office o ON o.id = pi.water_house_orgNode
		WHERE
		se.id IS NOT NULL
		AND di.ID IN (
		SELECT
		AUTHOBJECT_ID
		FROM
		permission_info pi
		WHERE
		AUTH_TYPE = 'DEVICE'
		AND ROLE_ID IN (
		SELECT
		ROLE_ID
		FROM
		sys_user_role
		WHERE
		user_id = #{userId}
		)
		OR ROLE_ID IN (
		SELECT
		role_id
		FROM
		sys_office_role_new
		WHERE
		office_id = (
		SELECT
		office_id
		FROM
		sys_user
		WHERE
		id = #{userId}
		)
		)
		)
		AND di.ID_PUMP_HOUSE IS NOT NULL
		AND di.del_flag = '0'
		AND pi.water_house_orgNode IS NOT NULL
		GROUP BY
		pi.water_house_orgNode
	</select>

	<!-- 营业所节点 -->
	<select id="findBusinessPlaceByRole" resultType="com.wapwag.woss.modules.biz.entity.TreeInfo">
		SELECT
		o.parent_id pid,
		pi.business_place_orgNode id ,
		o.`name` name
		FROM
		project pi
		LEFT JOIN pump_house phi ON phi.id_project = pi.id
		LEFT JOIN device di ON di.ID_PUMP_HOUSE = phi.id
		LEFT JOIN services se ON se.ID_DEVICE = di.ID
		LEFT JOIN sys_office o ON o.id = pi.business_place_orgNode
		WHERE
		se.id IS NOT NULL
		AND di.ID IN (
		SELECT
		AUTHOBJECT_ID
		FROM
		permission_info pi
		WHERE
		AUTH_TYPE = 'DEVICE'
		AND ROLE_ID IN (
		SELECT
		ROLE_ID
		FROM
		sys_user_role
		WHERE
		user_id = #{userId}
		)
		OR ROLE_ID IN (
		SELECT
		role_id
		FROM
		sys_office_role_new
		WHERE
		office_id = (
		SELECT
		office_id
		FROM
		sys_user
		WHERE
		id = #{userId}
		)
		)
		)
		AND di.ID_PUMP_HOUSE IS NOT NULL
		AND di.del_flag = '0'
		AND pi.business_place_orgNode IS NOT NULL
		GROUP BY
		pi.business_place_orgNode
	</select>

	<!-- 水司节点 -->
	<select id="findWaterDepartByRole" resultType="com.wapwag.woss.modules.biz.entity.TreeInfo">
		SELECT
		o.parent_id pid,
		pi.water_depart_orgNode id,
		o.`name` name
		FROM
		project pi
		LEFT JOIN pump_house phi ON phi.id_project = pi.id
		LEFT JOIN device di ON di.ID_PUMP_HOUSE = phi.id
		LEFT JOIN services se ON se.ID_DEVICE = di.ID
		LEFT JOIN sys_office o ON o.id = pi.water_depart_orgNode
		WHERE
		se.id IS NOT NULL
		AND di.ID IN (
		SELECT
		AUTHOBJECT_ID
		FROM
		permission_info pi
		WHERE
		AUTH_TYPE = 'DEVICE'
		AND ROLE_ID IN (
		SELECT
		ROLE_ID
		FROM
		sys_user_role
		WHERE
		user_id = #{userId}
		)
		OR ROLE_ID IN (
		SELECT
		role_id
		FROM
		sys_office_role_new
		WHERE
		office_id = (
		SELECT
		office_id
		FROM
		sys_user
		WHERE
		id = #{userId}
		)
		)
		)
		AND di.ID_PUMP_HOUSE IS NOT NULL
		AND di.del_flag = '0'
		AND pi.water_depart_orgNode IS NOT NULL
		AND pi.region_type IS NOT NULL
		GROUP BY
		pi.water_depart_orgNode
	</select>

	<select id="findOfficeTreeByPid" resultType="com.wapwag.woss.modules.biz.entity.TreeInfo">
		SELECT
		id,
		`name`,
		parent_id pid
		FROM
		sys_office
		WHERE
		del_flag = "0"
		AND id IN (
		<foreach collection="officeTreeInfo" item="item" separator=",">
			#{item.pId}
		</foreach>
		)
		GROUP BY
		id
	</select>

	<!-- 水务所下的视频树 -->
	<select id="findWaterHouseByRoleAndVideo" resultType="com.wapwag.woss.modules.biz.entity.TreeInfo">
		SELECT
		o.parent_id pid,
		pi.water_house_orgNode id,
		o.`name` NAME
		FROM
		project pi
		LEFT JOIN pump_house phi ON phi.id_project = pi.id
		LEFT JOIN device di ON di.ID_PUMP_HOUSE = phi.id
		LEFT JOIN services se ON se.ID_DEVICE = di.ID
		LEFT JOIN sys_office o ON o.id = pi.water_house_orgNode
		LEFT JOIN video_info vi ON vi.pump_house_id = phi.id
		WHERE
		se.id IS NOT NULL
		AND di.ID IN (
		SELECT
		AUTHOBJECT_ID
		FROM
		permission_info pi
		WHERE
		AUTH_TYPE = 'DEVICE'
		AND ROLE_ID IN (
		SELECT
		ROLE_ID
		FROM
		sys_user_role
		WHERE
		user_id = #{userId}
		)
		OR ROLE_ID IN (
		SELECT
		role_id
		FROM
		sys_office_role_new
		WHERE
		office_id = (
		SELECT
		office_id
		FROM
		sys_user
		WHERE
		id = #{userId}
		)
		)
		)
		AND di.ID_PUMP_HOUSE IS NOT NULL
		AND di.del_flag = '0'
		AND pi.water_house_orgNode IS NOT NULL
		AND vi.id IS NOT NULL
		GROUP BY
		pi.water_house_orgNode
	</select>

	<!-- 营业所下的视频树 -->
	<select id="findBusinessByRoleAndVideo" resultType="com.wapwag.woss.modules.biz.entity.TreeInfo">
		SELECT
		o.parent_id pid,
		pi.business_place_orgNode id,
		o.`name` NAME
		FROM
		project pi
		LEFT JOIN pump_house phi ON phi.id_project = pi.id
		LEFT JOIN device di ON di.ID_PUMP_HOUSE = phi.id
		LEFT JOIN services se ON se.ID_DEVICE = di.ID
		LEFT JOIN sys_office o ON o.id = pi.business_place_orgNode
		LEFT JOIN video_info vi ON vi.pump_house_id = phi.id
		WHERE
		se.id IS NOT NULL
		AND di.ID IN (
		SELECT
		AUTHOBJECT_ID
		FROM
		permission_info pi
		WHERE
		AUTH_TYPE = 'DEVICE'
		AND ROLE_ID IN (
		SELECT
		ROLE_ID
		FROM
		sys_user_role
		WHERE
		user_id = #{userId}
		)
		OR ROLE_ID IN (
		SELECT
		role_id
		FROM
		sys_office_role_new
		WHERE
		office_id = (
		SELECT
		office_id
		FROM
		sys_user
		WHERE
		id = #{userId}
		)
		)
		)
		AND di.ID_PUMP_HOUSE IS NOT NULL
		AND di.del_flag = '0'
		AND pi.business_place_orgNode IS NOT NULL
		AND vi.id IS NOT NULL
		GROUP BY
		pi.business_place_orgNode
	</select>

	<select id="findWaterWaterDepartByRole" resultType="com.wapwag.woss.modules.biz.entity.TreeInfo"
		parameterType="java.lang.String">
		SELECT
		o.parent_id pid,
		pi.water_depart_orgNode id,
		o.`name` name
		FROM
		project pi
		LEFT JOIN regional r ON pi.ID_REGION = r.id
		LEFT JOIN pump_house phi ON phi.id_project = pi.id
		LEFT JOIN device di ON di.ID_PUMP_HOUSE = phi.id
		LEFT JOIN services se ON se.ID_DEVICE = di.ID
		LEFT JOIN sys_office o ON o.id = pi.water_depart_orgNode

		LEFT JOIN video_info v ON v.pump_house_id = phi.id
		WHERE
		se.id IS NOT NULL
		AND pi.ID_REGION IS NOT NULL
		AND di.ID IN (
		SELECT
		AUTHOBJECT_ID
		FROM
		permission_info pi
		WHERE
		AUTH_TYPE = 'DEVICE'
		AND ROLE_ID IN (
		SELECT
		ROLE_ID
		FROM
		sys_user_role
		WHERE
		user_id = #{userId}
		)
		OR ROLE_ID IN (
		SELECT
		role_id
		FROM
		sys_office_role_new
		WHERE
		office_id = (
		SELECT
		office_id
		FROM
		sys_user
		WHERE
		id = #{userId}
		)
		)
		)
		AND di.ID_PUMP_HOUSE IS NOT NULL
		AND di.del_flag = '0'
		AND pi.water_depart_orgNode IS NOT NULL
		AND v.id IS NOT NULL
		GROUP BY
		pi.water_depart_orgNode
	</select>


	<select id="findWaterDepartByRoleAndNodeAndVideo" resultType="com.wapwag.woss.modules.biz.entity.TreeInfo"
		parameterType="java.lang.String">
		SELECT
		o.`name`,
		o.parent_id,
		o.id
		FROM
		project pi
		LEFT JOIN pump_house phi ON phi.id_project = pi.id
		LEFT JOIN device di ON di.ID_PUMP_HOUSE = phi.id
		LEFT JOIN services se ON se.ID_DEVICE = di.ID
		LEFT JOIN sys_office o ON o.id = pi.water_depart_orgNode
		LEFT JOIN video_info v ON v.pump_house_id = phi.id
		WHERE
		se.id IS NOT NULL
		AND di.ID IN (
		SELECT
		AUTHOBJECT_ID
		FROM
		permission_info pi
		WHERE
		AUTH_TYPE = 'DEVICE'
		AND ROLE_ID IN (
		SELECT
		ROLE_ID
		FROM
		sys_user_role
		WHERE
		user_id = #{userId}
		)
		OR ROLE_ID IN (
		SELECT
		role_id
		FROM
		sys_office_role_new
		WHERE
		office_id = (
		SELECT
		office_id
		FROM
		sys_user
		WHERE
		id = #{userId}
		)
		)
		)
		AND di.ID_PUMP_HOUSE IS NOT NULL
		AND di.del_flag = '0'
		AND pi.water_depart_orgNode IS NOT NULL
		AND v.id IS NOT NULL
		AND pi.region_type IS NOT NULL
		GROUP BY
		pi.water_depart_orgNode
	</select>

</mapper>