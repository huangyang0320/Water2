<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wapwag.woss.modules.monitor.dao.MonitorV2Mapper">

	<select id="getLatestDeviceData" resultType="map">
        SELECT
            deviceData.ID_SERVICE as serviceId,
            fu.MEMO AS serviceName,
            deviceData.DATE_TIME as serviceDate,
            deviceData.PV as serviceValue,
            fu.UNIT AS serviceUnit
        FROM
            (
                SELECT
                  *
                FROM
                  ${dbName}
                <where>
                    <if test="serviceId != null and !serviceId.isEmpty()">
                        AND ID_SERVICE IN
                        <foreach collection="serviceId.split(',')" separator="," open="(" close=")" item="item">
                            #{item}
                        </foreach>
                    </if>
                    <if test="deviceId.indexOf(',') == -1">
                        AND ID_DEVICE = #{deviceId}
                    </if>
                    <if test="deviceId.indexOf(',') > -1 ">
                        AND ID_DEVICE in
                        <foreach collection="deviceId.split(',')" separator="," open="(" close=")" item="item">
                            #{item}
                        </foreach>
                    </if>
                    AND DATE_TIME &gt; date_sub(now(), interval 3 Minute)
                </where>
                ORDER BY
                  DATE_TIME DESC LIMIT 200
            ) deviceData
        INNER JOIN services service ON service.ID = deviceData.ID_SERVICE
        INNER JOIN function fu on fu.id = service.ID_FUNCTION
        GROUP BY
          deviceData.id_service
    </select>

    <select id="getServiceData" resultType="map">
        SELECT
            ID_SERVICE as serviceId,
            TAG_NAME as serviceName,
            DATE_TIME as serviceDate,
            PV as serviceValue
        FROM
          ${dbName}
        WHERE
            DATE_TIME BETWEEN #{startDate} AND #{endDate}
        AND
            ID_SERVICE IN
            <foreach collection="serviceIds.split(',')" separator="," open="(" close=")" item="item">
                #{item}
            </foreach>
    </select>

    <select id="getServiceInfo" resultType="map">
        SELECT
            se.id AS serviceId,
            fu.MEMO AS serviceName,
            se.CODE AS serviceCode,
            se.ID_DEVICE AS deviceId,
            se.ID_FUNCTION AS functionId,
            fu.DATA_TYPE AS type,
            fu.UNIT AS unit,
            fu.IS_CUMULATIVE,
            fu.IS_PARAM_SETTING,
            fu.IS_ALARM,
            fu.IS_PARAM_STATUS,
            IFNULL(se.RangeMaximum, fu.MAX_RV) as max,
            IFNULL(se.RangeMinimum, fu.MIN_RV) as min,
            IFNULL(se.RATIO, fu.RATIO) as multiple,
            se.Default_Visible AS visible
        FROM
          services se
        INNER JOIN
          function fu on fu.id = se.ID_FUNCTION
        WHERE
            <if test="deviceId.indexOf(',') == -1">
                ID_DEVICE = #{deviceId}
            </if>
            <if test="deviceId.indexOf(',') > -1 ">
                ID_DEVICE in
                <foreach collection="deviceId.split(',')" separator="," open="(" close=")" item="item">
                    #{item}
                </foreach>
            </if>
           order by fu.id
    </select>

    <select id="getLatestDevicesData" resultType="map">
        SELECT
        deviceData.ID_DEVICE as deviceId,
        deviceData.ID_SERVICE as serviceId,
        fu.TYPE AS type,
        fu.MEMO AS serviceName,
        deviceData.DATE_TIME as serviceDate,
        IFNULL(case
        truncate(deviceData.pv * case when service.ratio is null then 1 else service.ratio end
        ,2)
        when '0.00' then '0' else
        truncate(deviceData.pv * case when service.ratio is null then
        1 else service.ratio end ,2)
        end, '-') as serviceValue,
        fu.UNIT AS serviceUnit
        FROM
        (
        SELECT
        *
        FROM
        ${dbName}
        <where>
            <if test="deviceId.indexOf(',') == -1">
                AND ID_DEVICE = #{deviceId}
            </if>
            <if test="deviceId.indexOf(',') > -1 ">
                AND ID_DEVICE in
                <foreach collection="deviceId.split(',')" separator="," open="(" close=")" item="item" >
                    #{item}
                </foreach>
            </if>
            <if test="serviceId != null and !serviceId.isEmpty() and serviceId.indexOf(',') == -1">
                AND `ID_SERVICE` = #{serviceId}
            </if>
            <if test="serviceId != null and !serviceId.isEmpty() and serviceId.indexOf(',') >= -1">
                AND ID_SERVICE in
                <foreach collection="serviceId.split(',')" separator="," open="(" close=")" item="item" >
                    #{item}
                </foreach>
            </if>
            AND DATE_TIME > date_sub(now(), interval 15 Second)
        </where>
        ORDER BY
        DATE_TIME DESC LIMIT 100000
        ) deviceData
        INNER JOIN services service ON service.ID = deviceData.ID_SERVICE
        INNER JOIN function fu on fu.id = service.ID_FUNCTION
        where service.node_display='0'
        GROUP BY
        service.data_sort
    </select>

    <select id="getLatestDevicesDataNew" resultType="map">
        SELECT
        deviceData.ID_DEVICE as deviceId,
        deviceData.ID_SERVICE as serviceId,
        fu.TYPE AS type,
        fu.MEMO AS serviceName,
        date_format( deviceData.DATE_TIME, '%H:%i:%s') as serviceDate,
        IFNULL(case
        truncate(deviceData.pv * case when service.ratio is null then 1 else service.ratio end
        ,2)
        when '0.00' then '0' else
        truncate(deviceData.pv * case when service.ratio is null then
        1 else service.ratio end ,2)
        end, '-') as serviceValue,
        fu.UNIT AS serviceUnit
        FROM
        (
        SELECT
        *
        FROM
        ${dbName}
        <where>
            <if test="deviceId.indexOf(',') == -1">
                AND ID_DEVICE = #{deviceId}
            </if>
            <if test="deviceId.indexOf(',') > -1 ">
                AND ID_DEVICE in
                <foreach collection="deviceId.split(',')" separator="," open="(" close=")" item="item" >
                    #{item}
                </foreach>
            </if>
            <if test="serviceId != null and !serviceId.isEmpty() and serviceId.indexOf(',') == -1">
                AND `ID_SERVICE` = #{serviceId}
            </if>
            <if test="serviceId != null and !serviceId.isEmpty() and serviceId.indexOf(',') >= -1">
                AND ID_SERVICE in
                <foreach collection="serviceId.split(',')" separator="," open="(" close=")" item="item" >
                    #{item}
                </foreach>
            </if>
            and DATE_TIME BETWEEN #{startDate} and #{endDate}
        </where>
        ORDER BY
        DATE_TIME DESC LIMIT 100000
        ) deviceData
        INNER JOIN services service ON service.ID = deviceData.ID_SERVICE
        INNER JOIN function fu on fu.id = service.ID_FUNCTION
        where service.node_display='0'
        order by  DATE_TIME
    </select>

</mapper>
