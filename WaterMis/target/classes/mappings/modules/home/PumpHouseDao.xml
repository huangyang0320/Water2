<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wapwag.woss.modules.home.dao.PumpHouseDao">

	<resultMap id="BaseResultMap"
		type="com.wapwag.woss.modules.home.entity.PumpHouseInfo">
		<id column="pump_house_id" property="pumpHouseId" jdbcType="VARCHAR" />
		<result column="project_id" property="projectId" jdbcType="VARCHAR" />
		<result column="PUMP_HOUSE_NAME" property="pumpHouseName"
			jdbcType="VARCHAR" />
		<result column="PUMP_HOUSE_ADDRESS" property="pumpHouseAddress"
			jdbcType="VARCHAR" />
		<result column="MEMO" property="memo" jdbcType="VARCHAR" />
		<result column="Longi" property="longi" jdbcType="DECIMAL" />
		<result column="Lati" property="lati" jdbcType="DECIMAL" />
		<result column="ACCESS_CTRL_IP_ADDR" property="accessCtrlIpAddr"
			jdbcType="VARCHAR" />
		<result column="ACCESS_CTRL_PORT" property="accessCtrlPort"
			jdbcType="REAL" />
		<result column="ALL_PIC_URL" property="allPicUrl" jdbcType="VARCHAR" />
		<collection property="deviceList"
			resultMap="com.wapwag.woss.modules.home.dao.DeviceDao.BaseResultMap" />
	</resultMap>

	<select id="findPumpHouseByRegion" resultType="com.wapwag.woss.modules.biz.entity.TreeInfo"
		parameterType="java.lang.String">
		select CONCAT("h", "--", h.id) id,h.name,
		p.ID_REGION pid,
<!-- 		case WHEN h.ID_REGION is null THEN p.ID_REGION ELSE h.ID_REGION end pid, -->
		<!-- 
			泵房ID的区域为空 就取项目的 区域ID -->
		h.id pumpHouseId,
		h.id_project projectId,
		p.`NAME` projectName,
		h.longi longi,
		h.ALL_PIC_URL allPicUrl,
		h.ADDRESS address,
		h.lati lati,
		h.pinyin,
		h.device_Manufacturers AS deviceManufacturers,
		h.device_Manufacturers_Information AS deviceManufacturersInformation,
		h.self_Control_Manufacturers AS selfControlManufacturers,
		h.self_Control_Manufacturers_Information AS selfControlManufacturersInformation,
		h.construction_Side as constructionSide,
		h.construction_Side_Information as constructionSideInformation,
		h.construction as construction,
		h.construction_Information as constructionInformation,
		h.property as property,
		h.property_Information AS propertyInformation,
		h.handover_time AS handoverTime,



		case when pd.pumpStatus  is NULL THEN 2 ELSE pd.pumpStatus  END  pumpStatus
		from pump_house h LEFT JOIN project p on h.id_project = p.id
		LEFT JOIN device d ON h.id = d.ID_PUMP_HOUSE
		LEFT JOIN (select * from pump_dev_status where createTime  &gt;  DATE_SUB(NOW(), INTERVAL 3 MINUTE)) pd on pd.pumpId = h.id
		where 1=1  
		AND h.id IN (
		SELECT
		phi.id
		FROM
		regional ri
		LEFT JOIN project pi ON pi.ID_REGION = ri.id
		LEFT JOIN pump_house phi ON phi.id_project = pi.id
		LEFT JOIN device di ON di.ID_PUMP_HOUSE = phi.id
		LEFT JOIN services se ON se.ID_DEVICE = di.ID
		WHERE
		se.id IS NOT NULL
		AND di.ID IN (
		SELECT
		AUTHOBJECT_ID
		FROM
		permission_info pi
		WHERE
		AUTH_TYPE = 'DEVICE'
		AND ROLE_ID IN (
		SELECT
		ROLE_ID
		FROM
		sys_user_role
		WHERE
		user_id = #{userId}
		)
		OR ROLE_ID IN (
		SELECT
		role_id
		FROM
		sys_office_role_new
		WHERE
		office_id = (
		SELECT
		office_id
		FROM
		sys_user
		WHERE
		id = #{userId}
		)
		)
		)
		AND di.ID_PUMP_HOUSE IS NOT NULL
		AND di.del_flag = '0'
		GROUP BY
		phi.id
		)
		GROUP BY
		h.id
	</select>


	<select id="findPumpHouseByRegionNew" resultType="com.wapwag.woss.modules.biz.entity.TreeInfo"
		parameterType="java.lang.String">
		SELECT
		CONCAT("h", "--", h.id) id,
		h. NAME,
<!-- 		CASE -->
<!-- 		WHEN h.ID_REGION IS NULL THEN -->
<!-- 		p.ID_REGION -->
<!-- 		ELSE -->
<!-- 		h.ID_REGION -->
<!-- 		END pid, -->
        p.ID_REGION pid,
		h.id pumpHouseId,
		h.id_project projectId,
		p.`NAME` projectName,
		h.longi longi,
		h.ALL_PIC_URL allPicUrl,
		h.ADDRESS address,
		h.lati lati,
		h.pinyin,
		CASE when pd.pumpStatus is null then 2 else pd.pumpStatus end pumpStatus
		FROM
		pump_house h
		LEFT JOIN project p ON h.id_project = p.id
		LEFT JOIN device d ON h.id = d.ID_PUMP_HOUSE
		LEFT JOIN  (select * from pump_dev_status where createTime  &gt;  DATE_SUB(NOW(), INTERVAL 3 MINUTE)) pd on pd.pumpId = h.id
		WHERE
		1 = 1
		AND h.id IN (
		SELECT
		phi.id
		FROM
		project pi
		LEFT JOIN regional r ON pi.ID_REGION = r.id
		LEFT JOIN pump_house phi ON phi.id_project = pi.id
		LEFT JOIN device di ON di.ID_PUMP_HOUSE = phi.id
		LEFT JOIN services se ON se.ID_DEVICE = di.ID
		LEFT JOIN sys_office o ON o.id = pi.water_depart_orgNode
		WHERE
		se.id IS NOT NULL
		AND pi.ID_REGION IS NOT NULL
		AND di.ID IN (
		SELECT
		AUTHOBJECT_ID
		FROM
		permission_info pi
		WHERE
		AUTH_TYPE = 'DEVICE'
		AND ROLE_ID IN (
		SELECT
		ROLE_ID
		FROM
		sys_user_role
		WHERE
		user_id = #{userId}
		)
		OR ROLE_ID IN (
		SELECT
		role_id
		FROM
		sys_office_role_new
		WHERE
		office_id = (
		SELECT
		office_id
		FROM
		sys_user
		WHERE
		id = #{userId}
		)
		)
		)
		AND di.ID_PUMP_HOUSE IS NOT NULL
		AND di.del_flag = '0'
		AND pi.water_depart_orgNode IS NOT NULL
		GROUP BY
		phi.id
		)
		GROUP BY
		h.id
	</select>

	<select id="findPumpHouseByType" resultType="com.wapwag.woss.modules.biz.entity.TreeInfo">
		SELECT
		CONCAT("h", "--", h.id) id,
		h.`NAME` NAME,
		CONCAT(
		p.ID_REGION,
		"--",
		p.region_type
		) pid,
		h.id pumpHouseId,
		h.id_project projectId,
		p.`NAME` projectName,
		h.longi longi,
		h.lati lati,
		h.pinyin,
		h.ALL_PIC_URL allPicUrl,
		h.ADDRESS address,
		case when pd.pumpStatus is null then 2 ELSE pd.pumpStatus END pumpStatus
		FROM
		pump_house h
		LEFT JOIN project p ON h.id_project = p.id
		LEFT JOIN (select * from pump_dev_status where createTime  &gt;  DATE_SUB(NOW(), INTERVAL 3 MINUTE)) pd on pd.pumpId = h.id
		WHERE 1=1  and 
		p.region_type IS NOT NULL
		AND h.id IN (
		SELECT
		phi.id
		FROM
		regional ri
		LEFT JOIN project pi ON pi.ID_REGION = ri.id
		LEFT JOIN pump_house phi ON phi.id_project = pi.id
		LEFT JOIN device di ON di.ID_PUMP_HOUSE = phi.id
		LEFT JOIN services se ON se.ID_DEVICE = di.ID
		WHERE
		se.id IS NOT NULL
		AND di.ID IN (
		SELECT
		AUTHOBJECT_ID
		FROM
		permission_info pi
		WHERE
		AUTH_TYPE = 'DEVICE'
		AND ROLE_ID IN (
		SELECT
		ROLE_ID
		FROM
		sys_user_role
		WHERE
		user_id = #{userId}
		)
		OR ROLE_ID IN (
		SELECT
		role_id
		FROM
		sys_office_role_new
		WHERE
		office_id = (
		SELECT
		office_id
		FROM
		sys_user
		WHERE
		id = #{userId}
		)
		)
		)
		AND di.ID_PUMP_HOUSE IS NOT NULL
		AND di.del_flag = '0'
		AND pi.region_type IS NOT NULL
		GROUP BY
		phi.id
		)
		GROUP BY
		h.id
	</select>

	<select id="findPumpHouseByTypeAndWaterDepart" resultType="com.wapwag.woss.modules.biz.entity.TreeInfo">
		SELECT
		CONCAT("h", "--", h.id) id,
		h.`NAME` NAME,
		CONCAT(
		p.water_depart_orgNode,
		"--",
		p.region_type
		) pid,
		h.id pumpHouseId,
		h.id_project projectId,
		p.`NAME` projectName,
		h.longi longi,
		h.lati lati,
		h.pinyin,
		h.ALL_PIC_URL allPicUrl,
		h.ADDRESS address,
		CASE when pd.pumpStatus is null then 2 else pd.pumpStatus end pumpStatus 
		FROM
		pump_house h
		LEFT JOIN project p ON h.id_project = p.id
		LEFT JOIN  (select * from pump_dev_status where createTime  &gt;  DATE_SUB(NOW(), INTERVAL 3 MINUTE)) pd on pd.pumpId = h.id
		WHERE 1=1  and 
		p.region_type IS NOT NULL
		AND h.id IN (
		SELECT
		phi.id
		FROM
		project pi
		LEFT JOIN pump_house phi ON phi.id_project = pi.id
		LEFT JOIN device di ON di.ID_PUMP_HOUSE = phi.id
		LEFT JOIN services se ON se.ID_DEVICE = di.ID
		LEFT JOIN sys_office o ON o.id = pi.water_depart_orgNode
		WHERE
		se.id IS NOT NULL
		AND di.ID IN (
		SELECT
		AUTHOBJECT_ID
		FROM
		permission_info pi
		WHERE
		AUTH_TYPE = 'DEVICE'
		AND ROLE_ID IN (
		SELECT
		ROLE_ID
		FROM
		sys_user_role
		WHERE
		user_id = #{userId}
		)
		OR ROLE_ID IN (
		SELECT
		role_id
		FROM
		sys_office_role_new
		WHERE
		office_id = (
		SELECT
		office_id
		FROM
		sys_user
		WHERE
		id = #{userId}
		)
		)
		)
		AND di.ID_PUMP_HOUSE IS NOT NULL
		AND di.del_flag = '0'
		AND pi.water_depart_orgNode IS NOT NULL
		AND pi.region_type IS NOT NULL
		GROUP BY
		phi.id
		)
		GROUP BY
		h.id
	</select>

	<select id="findPumpHouseByTypeNew" resultType="com.wapwag.woss.modules.biz.entity.TreeInfo">
		SELECT
		CONCAT("h", "--", h.id) id,
		h.`NAME` NAME,
		CONCAT(
		p.ID_REGION,
		"--",
		p.region_type
		) pid,
		h.id pumpHouseId,
		h.id_project projectId,
		p.`NAME` projectName,
		h.longi longi,
		h.lati lati,
		h.pinyin,
		h.ALL_PIC_URL allPicUrl,
		h.ADDRESS address,
		p.region_type,
		CASE when pd.pumpStatus is null then 2 else pd.pumpStatus end pumpStatus
		FROM
		pump_house h
		LEFT JOIN project p ON h.id_project = p.id
		LEFT JOIN  (select * from pump_dev_status where createTime  &gt;  DATE_SUB(NOW(), INTERVAL 3 MINUTE)) pd on pd.pumpId = h.id
		WHERE 1=1  and 
		p.region_type IS NOT NULL
		AND h.id IN (
		SELECT
		phi.id
		FROM
		regional ri
		LEFT JOIN project pi ON pi.ID_REGION = ri.id
		LEFT JOIN pump_house phi ON phi.id_project = pi.id
		LEFT JOIN device di ON di.ID_PUMP_HOUSE = phi.id
		LEFT JOIN services se ON se.ID_DEVICE = di.ID
		LEFT JOIN video_info v ON v.pump_house_id = phi.id
		WHERE
		se.id IS NOT NULL
		AND di.ID IN (
		SELECT
		AUTHOBJECT_ID
		FROM
		permission_info pi
		WHERE
		AUTH_TYPE = 'DEVICE'
		AND ROLE_ID IN (
		SELECT
		ROLE_ID
		FROM
		sys_user_role
		WHERE
		user_id = #{userId}
		)
		OR ROLE_ID IN (
		SELECT
		role_id
		FROM
		sys_office_role_new
		WHERE
		office_id = (
		SELECT
		office_id
		FROM
		sys_user
		WHERE
		id = #{userId}
		)
		)
		)
		AND di.ID_PUMP_HOUSE IS NOT NULL
		AND di.del_flag = '0'
		AND pi.region_type IS NOT NULL
		AND v.id IS NOT NULL
		GROUP BY
		phi.id
		)
		GROUP BY
		h.id
	</select>

	<select id="findPumpHouseByCompany" resultType="com.wapwag.woss.modules.biz.entity.TreeInfo">
		select * from (
		select CONCAT("h", "--", h.id) id,h.name, p.company_node pid ,
		h.id pumpHouseId,
		h.id_project projectId,
		p.`NAME` projectName,
		h.longi longi,
		h.lati lati,
		h.pinyin,
		h.ALL_PIC_URL allPicUrl,
		h.ADDRESS address
		from pump_house h LEFT JOIN project p on h.id_project = p.id where
		p.company_node in (
		<foreach collection="waterCompanyTreeInfo" item="item"
			separator=",">
			#{item.id}
		</foreach>
		)
		) t group by t.id
	</select>

	<select id="findPumpHouseByOffice" resultType="com.wapwag.woss.modules.biz.entity.TreeInfo">
		SELECT
		CONCAT("h", "--", h.id) id,
		h. NAME,
		<!-- p.company_node pid, -->
		P.water_house_orgNode pid,
		h.id pumpHouseId,
		h.id_project projectId,
		p.`NAME` projectName,
		h.longi longi,
		h.lati lati,
		h.pinyin,
		h.ALL_PIC_URL allPicUrl,
		h.ADDRESS address,
		case when pd.pumpStatus is null then 2 ELSE pd.pumpStatus end pumpStatus
		FROM
		pump_house h 
		LEFT JOIN project p ON h.id_project = p.id
		LEFT JOIN (select * from pump_dev_status where createTime  &gt;  DATE_SUB(NOW(), INTERVAL 3 MINUTE)) pd on pd.pumpId = h.id
		WHERE 1=1 and
		h.id IN (
		SELECT
		phi.id
		FROM
		project pi
		LEFT JOIN pump_house phi ON phi.id_project = pi.id
		LEFT JOIN device
		di ON di.ID_PUMP_HOUSE = phi.id
		LEFT JOIN services se ON se.ID_DEVICE =
		di.ID
		LEFT JOIN sys_office o ON o.id = pi.water_house_orgNode
		WHERE
		se.id IS NOT NULL
		AND di.ID IN (
		SELECT
		AUTHOBJECT_ID
		FROM
		permission_info pi
		WHERE
		AUTH_TYPE = 'DEVICE'
		AND ROLE_ID IN (
		SELECT
		ROLE_ID
		FROM
		sys_user_role
		WHERE
		user_id = #{userId}
		)
		OR ROLE_ID IN (
		SELECT
		role_id
		FROM
		sys_office_role_new
		WHERE
		office_id = (
		SELECT
		office_id
		FROM
		sys_user
		WHERE
		id = #{userId}
		)
		)
		)
		AND di.ID_PUMP_HOUSE IS NOT NULL
		AND di.del_flag = '0'
		AND
		pi.water_house_orgNode IS NOT NULL
		GROUP BY
		phi.id
		) GROUP BY h.id
	</select>

	<select id="findPumpHouseByOfficeAndBusiness" resultType="com.wapwag.woss.modules.biz.entity.TreeInfo">
		SELECT
		CONCAT("h", "--", h.id) id,
		h. NAME,
		P.business_place_orgNode pid,
		h.id pumpHouseId,
		h.id_project projectId,
		p.`NAME` projectName,
		h.longi longi,
		h.lati lati,
		h.pinyin,
		h.ALL_PIC_URL allPicUrl,
		h.ADDRESS address,
		CASE when pd.pumpStatus is null then 2 else pd.pumpStatus end pumpStatus
		FROM
		pump_house h 
		LEFT JOIN project p ON h.id_project = p.id
		LEFT JOIN  (select * from pump_dev_status where createTime  &gt;  DATE_SUB(NOW(), INTERVAL 3 MINUTE)) pd on pd.pumpId = h.id
		WHERE 1=1  and 
		h.id IN (
		SELECT
		phi.id
		FROM
		project pi
		LEFT JOIN pump_house phi ON phi.id_project = pi.id
		LEFT JOIN device
		di ON di.ID_PUMP_HOUSE = phi.id
		LEFT JOIN services se ON se.ID_DEVICE =
		di.ID
		LEFT JOIN sys_office o ON o.id = pi.business_place_orgNode
		WHERE
		se.id IS NOT NULL
		AND di.ID IN (
		SELECT
		AUTHOBJECT_ID
		FROM
		permission_info pi
		WHERE
		AUTH_TYPE = 'DEVICE'
		AND ROLE_ID IN (
		SELECT
		ROLE_ID
		FROM
		sys_user_role
		WHERE
		user_id = #{userId}
		)
		OR ROLE_ID IN (
		SELECT
		role_id
		FROM
		sys_office_role_new
		WHERE
		office_id = (
		SELECT
		office_id
		FROM
		sys_user
		WHERE
		id = #{userId}
		)
		)
		)
		AND di.ID_PUMP_HOUSE IS NOT NULL
		AND di.del_flag = '0'
		AND
		pi.business_place_orgNode IS NOT NULL
		GROUP BY
		phi.id
		) GROUP BY h.id
	</select>

	<select id="findPumpHouseByTypeAndCompany" resultType="com.wapwag.woss.modules.biz.entity.TreeInfo">
		select * from (
		select CONCAT("h","--",h.id) id,h.`NAME` name , CONCAT(p.company_node ,"--",
		p.region_type) pid ,
		h.id pumpHouseId,
		h.id_project projectId,
		p.`NAME` projectName,
		h.longi longi,
		h.pinyin,
		h.lati lati from pump_house h LEFT JOIN project p on h.id_project = p.id
		WHERE p.region_type is not null
		and p.company_node in
		(
		<foreach collection="regionTypeDto" item="item" separator=",">
			#{item.companyId}
		</foreach>
		)
		and
		p.region_type in (
		<foreach collection="regionTypeDto" item="item" separator=",">
			#{item.regionType}
		</foreach>
		)
		) t group by t.id
	</select>

	<select id="findPumpHouseByVideo" resultType="com.wapwag.woss.modules.biz.entity.TreeInfo">
		SELECT
		CONCAT("h", "--", h.id) id,
		h. NAME,
		p.ID_REGION pid,<!-- 泵房的区域ID不可靠 -->
		h.id pumpHouseId,
		h.id_project projectId,
		p.`NAME` projectName,
		h.longi longi,
		h.pinyin,
		h.ALL_PIC_URL allPicUrl,
		h.ADDRESS address,
		h.lati lati,
		CASE when pd.pumpStatus is null then 2 else pd.pumpStatus end pumpStatus
		FROM
		pump_house h
		LEFT JOIN project p ON h.id_project = p.id
		LEFT JOIN device d ON h.id = d.ID_PUMP_HOUSE
		LEFT JOIN video_info vi ON vi.pump_house_id = h.id
		LEFT JOIN  (select * from pump_dev_status where createTime  &gt;  DATE_SUB(NOW(), INTERVAL 3 MINUTE)) pd on pd.pumpId = h.id
		WHERE
		1 = 1 
		AND d.ID IS NOT NULL
		AND h.id IN (
		SELECT
		phi.id
		FROM
		regional ri
		LEFT JOIN project pi ON pi.ID_REGION = ri.id
		LEFT JOIN pump_house phi ON phi.id_project = pi.id
		LEFT JOIN device di ON di.ID_PUMP_HOUSE = phi.id
		LEFT JOIN services se ON se.ID_DEVICE = di.ID
		LEFT JOIN video_info vi ON vi.pump_house_id = phi.id
		WHERE
		se.id IS NOT NULL
		AND di.ID IN (
		SELECT
		AUTHOBJECT_ID
		FROM
		permission_info pi
		WHERE
		AUTH_TYPE = 'DEVICE'
		AND ROLE_ID IN (
		SELECT
		ROLE_ID
		FROM
		sys_user_role
		WHERE
		user_id = #{userId}
		)
		OR ROLE_ID IN (
		SELECT
		role_id
		FROM
		sys_office_role_new
		WHERE
		office_id = (
		SELECT
		office_id
		FROM
		sys_user
		WHERE
		id = #{userId}
		)
		)
		)
		AND di.ID_PUMP_HOUSE IS NOT NULL
		AND di.del_flag = '0'
		AND vi.id IS NOT NULL
		GROUP BY
		phi.id
		)
		GROUP BY
		h.id
	</select>


	<select id="findPumpHouseByTypeAndVedio" resultType="com.wapwag.woss.modules.biz.entity.TreeInfo">
		select * from (
		SELECT
		CONCAT("h", "--", h.id) id,
		h.`NAME` NAME,
		CONCAT(
		p.ID_REGION,
		"--",
		p.region_type
		) pid,
		h.id pumpHouseId,
		h.id_project projectId,
		p.`NAME` projectName,
		h.longi longi,
		h.lati lati,
		h.pinyin,
		h.ALL_PIC_URL allPicUrl,
		h.ADDRESS address

		FROM
		pump_house h
		LEFT JOIN project p ON h.id_project = p.id
		LEFT JOIN video_info v on v.pump_house_id = h.id
		WHERE
		p.region_type IS NOT NULL AND v.id is not null
		AND p.ID_REGION IN (
		<foreach collection="regionTypeDto" item="item" separator=",">
			#{item.regionId}
		</foreach>
		)
		AND p.region_type IN (
		<foreach collection="regionTypeDto" item="item" separator=",">
			#{item.regionType}
		</foreach>
		)
		) t GROUP BY t.id
	</select>

	<select id="findPumpHouseByCompanyAndVideo" resultType="com.wapwag.woss.modules.biz.entity.TreeInfo">
		select * from (
		SELECT
		CONCAT("h", "--", h.id) id,
		h. NAME,
		p.company_node pid,
		h.id pumpHouseId,
		h.id_project projectId,
		p.`NAME` projectName,
		h.longi longi,
		h.lati lati,
		h.pinyin,
		h.ALL_PIC_URL allPicUrl,
		h.ADDRESS address
		FROM
		pump_house h
		LEFT JOIN project p ON h.id_project = p.id
		LEFT JOIN video_info v on
		h.id = v.pump_house_id
		WHERE
		1= 1 AND v.id is not null AND
		p.company_node in (
		<foreach collection="waterCompanyTreeInfo" item="item"
			separator=",">
			#{item.id}
		</foreach>
		)
		) t GROUP BY t.id
	</select>

	<select id="findPumpHouseByOfficeAndVideo" resultType="com.wapwag.woss.modules.biz.entity.TreeInfo">
		SELECT
		CONCAT("h", "--", h.id) id,
		h. NAME,
		<!-- p.company_node pid, --> <!-- 水司表废弃 -->
		P.water_house_orgNode pid,
		h.id pumpHouseId,
		h.id_project projectId,
		p.`NAME` projectName,
		h.longi longi,
		h.lati lati,
		h.pinyin,
		h.ALL_PIC_URL allPicUrl,
		h.ADDRESS address,
		CASE when pd.pumpStatus is null then 2 else pd.pumpStatus end pumpStatus
		FROM
		pump_house h
		LEFT JOIN project p ON h.id_project = p.id
		LEFT JOIN video_info v ON h.id = v.pump_house_id
		LEFT JOIN  (select * from pump_dev_status where createTime  &gt;  DATE_SUB(NOW(), INTERVAL 3 MINUTE)) pd on pd.pumpId = h.id
		WHERE
		1 = 1  
		AND v.id IS NOT NULL
		AND h.id IN (
		SELECT
		phi.id
		FROM
		project pi
		LEFT JOIN pump_house phi ON phi.id_project = pi.id
		LEFT JOIN device di ON di.ID_PUMP_HOUSE = phi.id
		LEFT JOIN services se ON se.ID_DEVICE = di.ID
		LEFT JOIN sys_office o ON o.id = pi.water_house_orgNode
		LEFT JOIN video_info vi ON vi.pump_house_id = phi.id
		WHERE
		se.id IS NOT NULL
		AND di.ID IN (
		SELECT
		AUTHOBJECT_ID
		FROM
		permission_info pi
		WHERE
		AUTH_TYPE = 'DEVICE'
		AND ROLE_ID IN (
		SELECT
		ROLE_ID
		FROM
		sys_user_role
		WHERE
		user_id = #{userId}
		)
		OR ROLE_ID IN (
		SELECT
		role_id
		FROM
		sys_office_role_new
		WHERE
		office_id = (
		SELECT
		office_id
		FROM
		sys_user
		WHERE
		id = #{userId}
		)
		)
		)
		AND di.ID_PUMP_HOUSE IS NOT NULL
		AND di.del_flag = '0'
		AND pi.water_house_orgNode IS NOT NULL
		AND vi.id IS NOT NULL
		GROUP BY
		phi.id
		) GROUP BY h.id
	</select>

	<select id="findPumpHouseByBusinessAndVideo" resultType="com.wapwag.woss.modules.biz.entity.TreeInfo">
		SELECT
		CONCAT("h", "--", h.id) id,
		h. NAME,
		P.business_place_orgNode pid,
		h.id pumpHouseId,
		h.id_project projectId,
		p.`NAME` projectName,
		h.longi longi,
		h.lati lati,
		h.pinyin,
		h.ALL_PIC_URL allPicUrl,
		h.ADDRESS address,
		CASE when pd.pumpStatus is null then 2 else pd.pumpStatus end pumpStatus
		FROM
		pump_house h
		LEFT JOIN project p ON h.id_project = p.id
		LEFT JOIN video_info v ON h.id = v.pump_house_id
		LEFT JOIN  (select * from pump_dev_status where createTime  &gt;  DATE_SUB(NOW(), INTERVAL 3 MINUTE)) pd on pd.pumpId = h.id
		WHERE
		1 = 1  
		AND v.id IS NOT NULL
		AND h.id IN (
		SELECT
		phi.id
		FROM
		project pi
		LEFT JOIN pump_house phi ON phi.id_project = pi.id
		LEFT JOIN device di ON di.ID_PUMP_HOUSE = phi.id
		LEFT JOIN services se ON se.ID_DEVICE = di.ID
		LEFT JOIN sys_office o ON o.id = pi.business_place_orgNode
		LEFT JOIN video_info vi ON vi.pump_house_id = phi.id
		WHERE
		se.id IS NOT NULL
		AND di.ID IN (
		SELECT
		AUTHOBJECT_ID
		FROM
		permission_info pi
		WHERE
		AUTH_TYPE = 'DEVICE'
		AND ROLE_ID IN (
		SELECT
		ROLE_ID
		FROM
		sys_user_role
		WHERE
		user_id = #{userId}
		)
		OR ROLE_ID IN (
		SELECT
		role_id
		FROM
		sys_office_role_new
		WHERE
		office_id = (
		SELECT
		office_id
		FROM
		sys_user
		WHERE
		id = #{userId}
		)
		)
		)
		AND di.ID_PUMP_HOUSE IS NOT NULL
		AND di.del_flag = '0'
		AND pi.business_place_orgNode IS NOT NULL
		AND vi.id IS NOT NULL
		GROUP BY
		phi.id )
		GROUP BY h.id
	</select>

	<select id="findPumpHouseByRegionAndVideo" resultType="com.wapwag.woss.modules.biz.entity.TreeInfo">
		select CONCAT("h", "--", h.id) id,h.name, p.ID_REGION pid ,
		h.id pumpHouseId,
		h.id_project projectId,
		p.`NAME` projectName,
		h.longi longi,
		h.pinyin,
		h.ALL_PIC_URL allPicUrl,
		h.ADDRESS address,

		h.lati lati from pump_house h LEFT JOIN project p on h.id_project = p.id
		LEFT JOIN device d ON h.id = d.ID_PUMP_HOUSE
		LEFT JOIN video_info v on v.pump_house_id = h.id
		where 1=1 and d.ID is not null and v.id is NOT null and
		p.ID_REGION in (
		<foreach collection="regionalTreeInfo" item="item" separator=",">
			#{item.id}
		</foreach>
		)
		GROUP BY h.id
	</select>

	<select id="findPumpHouseByRegionAndVideoNew" resultType="com.wapwag.woss.modules.biz.entity.TreeInfo">
		SELECT
		CONCAT("h", "--", h.id) id,
		h. NAME,
		p.ID_REGION pid,
		h.id pumpHouseId,
		h.id_project projectId,
		p.`NAME` projectName,
		h.longi longi,
		h.ALL_PIC_URL allPicUrl,
		h.ADDRESS address,
		h.lati lati,
		h.pinyin,
		CASE when pd.pumpStatus is null then 2 else pd.pumpStatus end pumpStatus
		FROM
		pump_house h
		LEFT JOIN project p ON h.id_project = p.id
		LEFT JOIN device d ON h.id = d.ID_PUMP_HOUSE
		LEFT JOIN video_info v ON v.pump_house_id = h.id
		LEFT JOIN  (select * from pump_dev_status where createTime  &gt;  DATE_SUB(NOW(), INTERVAL 3 MINUTE)) pd on pd.pumpId = h.id
		WHERE
		1 = 1 
		AND d.ID IS NOT NULL
		AND v.id IS NOT NULL
		AND h.id IN (
		SELECT
		phi.id
		FROM
		project pi
		LEFT JOIN regional r ON pi.ID_REGION = r.id
		LEFT JOIN pump_house phi ON phi.id_project = pi.id
		LEFT JOIN device di ON di.ID_PUMP_HOUSE = phi.id
		LEFT JOIN services se ON se.ID_DEVICE = di.ID
		LEFT JOIN sys_office o ON o.id = pi.water_depart_orgNode
		LEFT JOIN video_info v ON v.pump_house_id = phi.id
		WHERE
		se.id IS NOT NULL
		AND pi.ID_REGION IS NOT NULL
		AND di.ID IN (
		SELECT
		AUTHOBJECT_ID
		FROM
		permission_info pi
		WHERE
		AUTH_TYPE = 'DEVICE'
		AND ROLE_ID IN (
		SELECT
		ROLE_ID
		FROM
		sys_user_role
		WHERE
		user_id = #{userId}
		)
		OR ROLE_ID IN (
		SELECT
		role_id
		FROM
		sys_office_role_new
		WHERE
		office_id = (
		SELECT
		office_id
		FROM
		sys_user
		WHERE
		id = #{userId}
		)
		)
		)
		AND di.ID_PUMP_HOUSE IS NOT NULL
		AND di.del_flag = '0'
		AND pi.water_depart_orgNode IS NOT NULL
		AND v.id IS NOT NULL
		GROUP BY
		phi.id
		)
		GROUP BY
		h.id
	</select>

	<select id="findPumpHouseByTypeAndCompanyAndVideo" resultType="com.wapwag.woss.modules.biz.entity.TreeInfo">
		SELECT * FROM (
		SELECT
		CONCAT("h", "--", h.id) id,
		h.`NAME` NAME,
		CONCAT(
		p.company_node,
		"--",
		p.region_type
		) pid,
		h.id pumpHouseId,
		h.id_project projectId,
		p.`NAME` projectName,
		h.longi longi,
		h.lati lati,
		h.pinyin
		FROM
		pump_house h
		LEFT JOIN project p ON h.id_project = p.id
		LEFT JOIN video_info v on v.pump_house_id = h.id
		WHERE
		p.region_type IS NOT NULL
		AND v.id is not null
		AND p.company_node IN (
		<foreach collection="regionTypeDto" item="item" separator=",">
			#{item.companyId}
		</foreach>
		)
		AND p.region_type IN (
		<foreach collection="regionTypeDto" item="item" separator=",">
			#{item.regionType}
		</foreach>
		)
		) t GROUP by t.id
	</select>

	<select id="findPumpHouseByTypeAndWaterDepartAndVideo"
		resultType="com.wapwag.woss.modules.biz.entity.TreeInfo">
		SELECT
		CONCAT("h", "--", h.id) id,
		h.`NAME` NAME,
		CONCAT(
		p.water_depart_orgNode,
		"--",
		p.region_type
		) pid,
		h.id pumpHouseId,
		h.id_project projectId,
		p.`NAME` projectName,
		h.longi longi,
		h.lati lati,
		h.pinyin,
		CASE when pd.pumpStatus is null then 2 else pd.pumpStatus end pumpStatus
		FROM
		pump_house h
		LEFT JOIN project p ON h.id_project = p.id
		LEFT JOIN video_info v ON v.pump_house_id = h.id
		LEFT JOIN  (select * from pump_dev_status where createTime  &gt;  DATE_SUB(NOW(), INTERVAL 3 MINUTE)) pd on pd.pumpId = h.id
		WHERE 1=1 and 
		p.region_type IS NOT NULL
		AND v.id IS NOT NULL
		AND h.id IN (
		SELECT
		phi.id
		FROM
		project pi
		LEFT JOIN pump_house phi ON phi.id_project = pi.id
		LEFT JOIN device di ON di.ID_PUMP_HOUSE = phi.id
		LEFT JOIN services se ON se.ID_DEVICE = di.ID
		LEFT JOIN sys_office o ON o.id = pi.water_depart_orgNode
		LEFT JOIN video_info v ON v.pump_house_id = phi.id
		WHERE
		se.id IS NOT NULL
		AND di.ID IN (
		SELECT
		AUTHOBJECT_ID
		FROM
		permission_info pi
		WHERE
		AUTH_TYPE = 'DEVICE'
		AND ROLE_ID IN (
		SELECT
		ROLE_ID
		FROM
		sys_user_role
		WHERE
		user_id = '1'
		)
		OR ROLE_ID IN (
		SELECT
		role_id
		FROM
		sys_office_role_new
		WHERE
		office_id = (
		SELECT
		office_id
		FROM
		sys_user
		WHERE
		id = '1'
		)
		)
		)
		AND di.ID_PUMP_HOUSE IS NOT NULL
		AND di.del_flag = '0'
		AND pi.water_depart_orgNode IS NOT NULL
		AND v.id IS NOT NULL
		AND pi.region_type IS NOT NULL
		GROUP BY
		phi.id
		)
		GROUP BY
		h.id
	</select>

	<select id="selectPumpIdByUser" resultType="String">
		SELECT
			p.id
		FROM pump_house p
			left join device d on d.ID_PUMP_HOUSE = p.id
			left join services s on s.ID_DEVICE = d.id
		WHERE
			d.del_flag = '0'
			AND s.ID IS NOT NULL
			AND d.ID IN (
				SELECT
					pi.AUTHOBJECT_ID
				FROM
					permission_info pi
				WHERE
					(
						pi.AUTH_TYPE = 'DEVICE'
						AND pi.ROLE_ID IN (
							SELECT
								sys_user_role.role_id
							FROM
								sys_user_role
							WHERE
								sys_user_role.user_id = #{userId}
						)
					)
					OR pi.ROLE_ID IN (
						SELECT
							sys_office_role_new.role_id
						FROM
							sys_office_role_new
						WHERE
							sys_office_role_new.office_id = (
								SELECT
									sys_user.office_id
								FROM
									sys_user
								WHERE
									sys_user.id = #{userId}
							)
					)
			)
		GROUP BY p.id
	</select>
</mapper>